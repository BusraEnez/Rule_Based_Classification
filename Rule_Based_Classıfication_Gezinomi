import pandas as pd
pd.set_option("display.max_rows", None)
pd.set_option("display.max_columns", None)
df = pd.read_excel('dataset/gezinomi.xlsx')
pd.set_option('display.float_format', lambda x: '%.2f' % x)
print(df.head())
print(df.shape)
print(df.info())

#Unique City number-name
print(df["SaleCityName"].nunique())
print(df["SaleCityName"].value_counts())

#Unique concept number
df["ConceptName"].nunique()


df["ConceptName"].value_counts()


df.groupby("SaleCityName").agg({"Price": "sum"})


df.groupby("ConceptName").agg({"Price": "sum"})


df.groupby(by=['SaleCityName']).agg({"Price": "mean"})


df.groupby(by=['ConceptName']).agg({"Price": "mean"})


df.groupby(by=["SaleCityName", 'ConceptName']).agg({"Price": "mean"})



#############################################
bins = [-1, 7, 30, 90, df["SaleCheckInDayDiff"].max()]
labels = ["Last Minuters", "Potential Planners", "Planners", "Early Bookers"]

df["EB_Score"] = pd.cut(df["SaleCheckInDayDiff"], bins, labels=labels)
df.head(50).to_excel("eb_scorew.xlsx", index=False)



#############################################
# Average Price City-Concept-EB Score breakdown
df.groupby(by=["SaleCityName", 'ConceptName', "EB_Score" ]).agg({"Price": ["mean", "count"]})

# Average Price City-Concept-Season breakdown
df.groupby(by=["SaleCityName", "ConceptName", "Seasons"]).agg({"Price": ["mean", "count"]})

# Averge Price City-Concept-CInday breakdown
df.groupby(by=["SaleCityName", "ConceptName", "CInDay"]).agg({"Price": ["mean", "count"]})


#############################################
#Sorting the output of City-Concept-Season breakdown according to Price


agg_df = df.groupby(["SaleCityName", "ConceptName", "Seasons"]).agg({"Price": "mean"}).sort_values("Price", ascending=False)
agg_df.head(20)

############################################
agg_df.reset_index(inplace=True)

agg_df.head()


#############################################
agg_df['sales_level_based'] = agg_df[["SaleCityName", "ConceptName", "Seasons"]].agg(lambda x: '_'.join(x).upper(), axis=1)


#############################################
#Segment personas by Price

agg_df["SEGMENT"] = pd.qcut(agg_df["Price"], 4, labels=["D", "C", "B", "A"])
agg_df.head(30)
agg_df.groupby("SEGMENT").agg({"Price": ["mean", "max", "sum"]})

agg_df.sort_values(by="Price")

#EXAMPLE
new_user = "ANTALYA_HERÅžEY DAHIL_HIGH"
agg_df[agg_df["sales_level_based"] == new_user]
